<?xml version="1.0"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">	
			<value>classpath:jdbc.properties</value>
		</property>
	</bean>
	
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">  
        <property name="jdbcUrl" value="${jdbc.oracle.url}"/>  
        <property name="driverClass" value="${jdbc.oracle.driverClassName}"/>  
        <property name="user" value="${jdbc.oracle.username}"/>  
        <property name="password" value="${jdbc.oracle.password}"/>  
        <!--连接池中保留的最大连接数。Default: 15 -->  
        <property name="maxPoolSize" value="50"/>  
        <!--连接池中保留的最小连接数。-->  
        <property name="minPoolSize" value="5"/>  
        <!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->  
        <property name="initialPoolSize"><value>10</value></property>  
        <!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->  
        <property name="maxIdleTime" value="60"/> 
        <!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->  
        <property name="idleConnectionTestPeriod" value="180"></property>  
        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->  
        <property name="acquireIncrement"><value>5</value></property>  
        <!--JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements 属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。 如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0-->  
        <property name="maxStatements"><value>0</value></property>  
        <!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->  
        <property name="acquireRetryAttempts"><value>30</value></property>  
        <!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效 保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试 获取连接失败后该数据源将申明已断开并永久关闭。Default: false-->  
        <property name="breakAfterAcquireFailure"><value>false</value></property>  
        <!--因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的 时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable 等方法来提升连接测试的性能。Default: false -->  
        <!-- <property name="testConnectionOnCheckout"><value>false</value></property>
        <property name="debugUnreturnedConnectionStackTraces"><value>true</value></property> -->
        <property name="preferredTestQuery"><value>select 1 from dual</value></property>
    </bean>

	<!-- 针对查询连接池 -->
	<bean id="dataSourceQuery" class="com.mchange.v2.c3p0.ComboPooledDataSource">  
        <property name="jdbcUrl" value="${jdbc.oracle.url}"/>  
        <property name="driverClass" value="${jdbc.oracle.driverClassName}"/>  
        <property name="user" value="${jdbc.oracle.username}"/>  
        <property name="password" value="${jdbc.oracle.password}"/>  
        <property name="maxPoolSize" value="50"/>  
        <property name="minPoolSize" value="5"/>  
        <property name="initialPoolSize"><value>10</value></property>  
        <property name="maxIdleTime" value="60"/>  
        <property name="idleConnectionTestPeriod" value="180"></property>  
        <property name="acquireIncrement"><value>5</value></property>  
        <property name="maxStatements"><value>0</value></property>  
        <property name="acquireRetryAttempts"><value>30</value></property>  
        <property name="breakAfterAcquireFailure"><value>false</value></property>  
        <!-- <property name="testConnectionOnCheckout"><value>false</value></property> 
        <property name="debugUnreturnedConnectionStackTraces"><value>true</value></property>
		<property name="unreturnedConnectionTimeout"><value>1</value></property>-->
        <property name="preferredTestQuery"><value>select 1 from dual</value></property>
    </bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					com.huateng.hibernate.dialect.OracleDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.query.factory_class">
					org.hibernate.hql.classic.ClassicQueryTranslatorFactory
				</prop>
				<prop key="hibernate.jdbc.fetch_size">50</prop>
				<prop key="hibernate.jdbc.batch_size">50</prop>
				<prop key="hibernate.connection.provider_class">org.hibernate.connection.C3P0ConnectionProvider</prop>
				<prop key="hibernate.connection.release_mode">after_transaction</prop>
			</props>
		</property>
		<property name="mappingResources">
			<list>
				<!-- 系统 -->
				<value>hbm/system/TblFuncInf.hbm.xml</value>
				<value>hbm/system/TblRoleInf.hbm.xml</value>
				<value>hbm/system/TblRoleFuncMap.hbm.xml</value>
				<value>hbm/system/TblTxnInfo.hbm.xml</value>
				<!-- 基本信息管理 -->
				<value>hbm/base/TblOprInfo.hbm.xml</value>
				<value>hbm/base/TblBrhInfo.hbm.xml</value>
				<value>hbm/base/CstSysParam.hbm.xml</value>
				<value>hbm/base/TblCityCode.hbm.xml</value>
				<value>hbm/base/TblCompanyStepment.hbm.xml</value>
			    <value>hbm/base/TblCompanyEmployee.hbm.xml</value>
			    <value>hbm/base/TblSalTpGrp.hbm.xml</value>			    
			</list>
		</property>
	</bean>
	
	<bean id="sessionFactoryQuery"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref local="dataSourceQuery" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					com.huateng.hibernate.dialect.OracleDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.query.factory_class">
					org.hibernate.hql.classic.ClassicQueryTranslatorFactory
				</prop>
				<prop key="hibernate.jdbc.fetch_size">50</prop>
				<prop key="hibernate.jdbc.batch_size">50</prop>
				<prop key="hibernate.connection.provider_class">org.hibernate.connection.C3P0ConnectionProvider</prop>
				<prop key="hibernate.connection.release_mode">after_transaction</prop>
			</props>
		</property>
		<property name="mappingResources">
			<list>
				<value>hbm/system/TblFuncInf.hbm.xml</value>
				<value>hbm/system/TblRoleFuncMap.hbm.xml</value>
				<value>hbm/base/TblBrhInfo.hbm.xml</value>
			</list>
		</property>
	</bean>

	<!--Transaction -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<bean id="transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
				<!--<prop key="*">PROPAGATION_SUPPORTS</prop>-->
			</props>
		</property>
	</bean>
	
	<bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="beanNames">
			<list>
				<value>*Target</value>
                <value>*BO</value>
			</list>
		</property>
		<property name="interceptorNames">
			<list>
				<value>transactionInterceptor</value>
			</list>
		</property>
	</bean>
</beans>